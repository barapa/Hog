# This version assumes we have a builtin function to sort lists of primitives, which I think is a good idea and easy to implement with Collections.sort(List)

#Assume we have multiple files filled with unsorted integers, like:

# 102
# 8983
# 17
# 18
# 191
# 12


# takes 2 sorted lists of ints and merges them into a larger sorted list
list<int> merge(list<int> sortedList1, list<int> sortedList2) {
	# indices into next value of each sorted list
	int ind1 = 0
	int ind2 = 0
	
	list<int> mergedList = new list<int>()
	
	# merge all values while neither list is empty
	while( ind1 < sortedList1.size() && ind2 < sortedList2.size() ) {
		
		# insert the smaller of the 2 values and update index pointers
		smallest1 = sortedList.get(ind1)
		smallest2 = sortedList.get(ind2)
		
		if(smallest1 < smallest2) {
			mergedList.add(smallest1)
			ind1++
		}
		else {
			mergedList.add(smallest2)
			ind2++
		}
	}
	
	# insert any remaining elements from sortedList1
	if ( ind1 < sortedList1.size() ) {
		for (int i = ind1; i<sortedList1.size(); i++) {
			mergedList.add(sortedList1.get(i))
		}
	}
	# insert any remaining elements from sortedList2
	else if (ind2 < sortedList2.size() ) {
		for (int i = ind2; i<sortList2.size(); i++) {
			mergedList.add(sortedList2.get(i))
		}
	}
	
	return mergedList
}



string reduceKey = "reduceKey"

map {
	list<int> sortedInts = new list<int>()   # don't know syntax for this
  
	# put every number from file into list
	for each line in myFile {
		for each number in tokenize(line) {
			sortedInts.add(str2Int(number)) # we need to decide on how to implement this 
		}
	}
	
	# sort list using builtin function for sorting list of primitives
	sortedInts.sort()
	
	# for every input file, emit a list of sorted ints, with identical keys
	emit (reduceKey, sortedInts)
}

# reduce will get a list of sorted lists, and merge them 2 at a time
reduce{
	
	# start with the first list as the fully sorted list
	list<int> allSortedNums = values.getNext()
	
	# merge the allSortedNums with the next list in the values
	while(values.hasNext()) {
		allSortedNums = merge(allSortedNums, values.getNext())
	}
	emit(reduceKey, allSortedNums)
}

	print(results.values)
	store(results, "sortedNumbers.txt")
	