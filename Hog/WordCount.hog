@Functions {
  int fib(int n) {
    if n == 0 {
      return 0;
    } elseif n == 1 {
      return 1;
    } else {
      return fib(n-1) + fib(n-2);  
    }
  }
  
  int factorial(int n) {
    if n==0 or n==1 {
      return 1;
    }
    else {
    return n * factorial(n-1);
    }
  }
}

@Map (int lineNum, text line) -> (text, int) {
  #{ this is a 
       block comment }#
  int count = 1;
  foreach word in line.tokenize(" ") {
    emit(word, 1);
  }
}

@Reduce (text word, iter<int> values) -> (text, int) {
  int count = 0;
  while values.hasNext() {
    count = count + values.next();
  }
  emit(count, word);
}

@Main {
  mapReduce();
}
