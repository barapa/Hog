@Functions {
  int fib(int n) {
    if n == 0 {
      return 0
    } elseif n == 1 {
      return 1
    } else {
      return fib(n-1) + fib(n-2)
    }
  }
}

@Map (int lineNum, text line) -> (text, int) {
  #{ this is a 
       block comment }#
  foreach word in line.tokenize(" ") {
    emit(word, 1)
  }
}

@Reduce (text word, iter<int> values) -> (text, int) {
  # this is a line comment:
  int count
  list<text> textList(5) 
  list<list<text>> doubleList
  list<list<text>> anotherDoubleList = doubleList
  while values.hasNext() {
    count = count + values.next()
    int face = 5
  }
  emit(count, word)
  if quit == (5 > 2) {
    return
  }
}

@Main {
  mapReduce()
}
