@Functions {
  int fib(int n) {
    real count = 0;
    if (n == 0) {
      int x = 5;
      return x;
    } elseif (n == 1) {
      return 1;
    } else {
      return fib(n-1) + fib(n-2);  
    }
  }
  
  int factorial(int n) {
   bool count = true;
    if ((n==0) or (n==1)) {
      return 1;
    }
    else {
    return n * factorial(n-1);
    }
  }
}



@Map (int lineNum, text line) -> (text, int) {
  #{ this is a 
       block comment }#
  int count = 1;
  #dict<int, real> face;
  #real face = 1.0;
  foreach text myTest in line.tokenize(' ') {
    emit(myTest, 1);
  }
  if (count == 2) {
    print('count equals 2!');
  } elseif (count == 3) {
    print('count equals 3!');
    int ben = 10;
  } else {
    int face = 0;
    int x = face + 1;
    face++;
    print('count equals something else');
  }
  
  list<int> face;
  face.clear();
  
}

@Reduce (text word, iter<int> values) -> (text, int) {
  text face = 'hi';
  int count = 0;
  while ( values.hasNext() ) {
    count = count + values.next();
  }
  emit(word, count);
}

@Main {
  mapReduce();
}
